#include <stdlib.h>
#include <string.h>
#include <stdio.h>
#include "asset_summary_info.h"
EXEC SQL INCLUDE gold_rec.h;

EXEC SQL INCLUDE sqlca.h;

#define NOTFND 1403
/*  Global variables  */
char part[51];
char loc_code[4];
char loc_list[50][4];
long rfi_qty_ary[50];
long nrfi_qty_ary[50];
long due_in_qty_ary[50];
long bo_qty_ary[50];

inv_vars inv_rec;

/*  inv_csr query variables  */
char location[7];
float rfi_qty;
short rfi_qty_i;

void query_for_gold_info(char *part,char *gold_db, gold_vars *gold)
{
	gold_vars gold_rec;
    short ims_designator_code_i;

	EXEC SQL AT :gold_db 
		select c.part,c.nsn,c.ims_designator_code,u.user_name
		into :gold_rec.part,
			 :gold_rec.nsn,
			 :gold_rec.ims_designator_code:ims_designator_code_i,
			 :gold_rec.user_name
		from cat1 c, use1 u
		where c.part = :part
		  and c.ims_designator_code like 'F18%'
		  and c.ims_designator_code = u.user_ref7;

	if(sqlca.sqlcode == NOTFND) ;
	else
	{
		if(sqlca.sqlcode == 0)
		{
			strncpy(gold->part,gold_rec.part,50);
			gold->part[50] = '\0';

			strncpy(gold->nsn,gold_rec.nsn,16);
			gold->nsn[16] = '\0';

			if(ims_designator_code_i == -1)
			{
				strncpy(gold->ims_designator_code,"                    ",20);
				gold->ims_designator_code[20] = '\0';
			}
			else
			{
				strncpy(gold->ims_designator_code,gold_rec.ims_designator_code,20);
				gold->ims_designator_code[20] = '\0';
			}

			strncpy(gold->user_name,gold_rec.user_name,40);
			gold->user_name[40] = '\0';

		/*	printf("%s %s %s %s\n",gold->part,gold->nsn,gold->ims_designator_code,gold->user_name);*/
		}
		else
			db_err("query_for_gold_info");
	}
}
/*

*/
void query_for_inventory2(char *niin,char *inv_db, inv_vars *inv, int *inv_cnt)
{
	int found = 1;
	int i = 0;
	
	inv_vars inv_rec;
	short uic_i;
	short on_hand_i;
	short due_out_i;
	short due_in_i;
	short purpose_code_i;
	short condition_code_i;
	short site_name_i;

	EXEC SQL AT :inv_db DECLARE inv_csr CURSOR FOR
		select i.uic,
			s.site_name,
			i.purpose_code,
			i.condition_code,
			sum(i.on_hand) on_hand_s,
			sum(i.due_out) due_out_s,
			sum(i.due_in) due_in_s
		from v_site_inventory_first i,
		     site_uic s
		where niin = rtrim(:niin)
		  and i.uic = s.a002
		  and s.site_name not like '%BOEING%'
		group by i.uic, s.site_name, i.purpose_code, i.condition_code;

	EXEC SQL OPEN inv_csr;

	if(sqlca.sqlcode == 0)
	{
		while(found)
		{
			EXEC SQL FETCH inv_csr INTO
				:inv_rec.uic:uic_i,
				:inv_rec.site_name:site_name_i,
				:inv_rec.purpose_code:purpose_code_i,
				:inv_rec.condition_code:condition_code_i,
				:inv_rec.on_hand:on_hand_i,
				:inv_rec.due_out:due_out_i,
				:inv_rec.due_in:due_in_i;

			if(sqlca.sqlcode == NOTFND)
				found = 0;
			else
			{
				if(sqlca.sqlcode == 0)
				{
					if(uic_i == -1)
						strncpy(inv_rec.uic,"     ",5);
					inv_rec.uic[5] = '\0';

					if(site_name_i == -1)
						strncpy(inv_rec.site_name,"                                   ",35);
					inv_rec.site_name[35] = '\0';
				
					if(on_hand_i == -1)
						inv_rec.on_hand = 0.0;

					if(due_out_i == -1)
						inv_rec.due_out = 0.0;

					if(due_in_i == -1)
						inv_rec.due_in = 0.0;

					if(purpose_code_i == -1)
						strncpy(inv_rec.purpose_code," ",1);
					inv_rec.purpose_code[1] = '\0';
					
					if(condition_code_i == -1)
						strncpy(inv_rec.condition_code," ",1);
					inv_rec.condition_code[1] = '\0';
					
					memcpy((char *)&inv[i],(char *)&inv_rec,sizeof(inv_vars));
					i++;
				}
				else
					db_err("query_for_inventory");
			}
		}
	}
	else
		db_err("query_for_inventory");

	*inv_cnt = i;
/*	printf("Count = %d, inv_cnt = %d\n",i,*inv_cnt);*/
}
/*

*/

void query_first_supply_pos(char *in_part,char *inv_db, inv_vars *inv, int *inv_cnt)
{
	int found = 1;
	int i = 0;

	strncpy(part,in_part,50);	
	query_on_hand_rfi(inv_db);
	query_on_hand_nrfi(inv_db);
}
/*

*/
void query_on_hand_rfi(char *inv_db) 
{
	EXEC SQL AT :inv_db DECLARE rfi_csr CURSOR FOR
		select substr(i.sc,10,6),
		       sum(nvl(i.qty,0))
		from item i
		where sc like 'F18%'
		  and i.part = :part
		  and i.status_servicable = 'Y'
		  and i.status_avail = 'Y'
		  and i.status_new_order = 'N'
		group by substr(i.sc,10,6);

	EXEC SQL OPEN rfi_csr;

	if(sqlca.sqlcode == 0)
	{
		while(found)
		{
			EXEC SQL FETCH rfi_csr INTO
				:location,
				:qty:qty_i;

			if(sqlca.sqlcode == NOTFND)
				found = 0;
			else
			{
				if(sqlca.sqlcode == 0)
				{
					convert_to_loc_code();
					strncpy(loc_list[i],loc_code,3);
					loc_list[i][3] = '\0';

					if(qty_i != -1)
						rfi_qty_ary[i] = qty;
				}
				else
					db_err("query_for_first_inventory");
			}
			i++;
		}
	}
	else
		db_err("query_on_hand_rfi");
}
/*

*/
void convert_to_loc_code()
{
	if(strcmp(substring(location,0,2),"SUB") == 0 || strcmp(substring(location,0,2),"ROR") == 0)
		strncpy(loc_code,"QMX",3);
	else if(strcmp(substring(location,3,5),"TOR") == 0 ||
		    strcmp(substring(location,3,5),"RNT") == 0)
		strncpy(loc_code,"QW4",3);
	else if(strcmp(substring(location,3,5),"LEM") == 0)
		strncpy(loc_code,"QW2",3);
	else if(strcmp(substring(location,3,5),"NNI") == 0)
		strncpy(loc_code,"QW3",3);
}
		
		

