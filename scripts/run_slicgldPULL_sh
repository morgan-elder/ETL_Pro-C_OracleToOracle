#!/bin/sh

usage() {
 echo >&2 "Usage: $0 [ -d -m -o filename -s step -x ] email_addr"
 echo >&2 "  -d turn on debug"
 echo >&2 "  -m show step menu"
 echo >&2 "  -n stepname where stepname is one of the steps in this script"
 echo >&2 "  -o SYSOUT filename"
 echo >&2 "  -s stepnum where stepnum is 0 to 23"
 echo >&2 "  -x debug gldCATAPIU - i.e. don't create any GOLD transactions"
 echo >&2 "  email_addr - default is joseph.t.conley@boeing.com unless being executed by zf297a"
}

stepnum=0
ARGS=$*
NUMARGS=$#

# default 
PROCESSING_MODEL=F18

while getopts dmn:o:p:s:x o
do  case "$o" in
  d)  DEBUG=Y 
      DBGECHO=echo
      set -x ;;
  m)  STEP=menu ;;
  n)  STEP=$OPTARG ;;
  o)  SYSOUT=$OPTARG ;;
  p)  PROCESSING_MODEL=$OPTARG ;;
  s)  stepnum=$OPTARG ;;
  x)  APIDBG=-x ;;
[?])  usage
      exit 1;;
  esac
done
shift $(( $OPTIND - 1))


export PROCESSING_MODEL 

if (($#>0)) ; then
  RECIPIENTS=$1
else
  if [ `logname` = "zf297a" ] ; then
    RECIPIENTS=douglas.s.elder@boeing.com
  else
    RECIPIENTS=joseph.t.conley@boeing.com
  fi
fi


. /mcair/rel/appl/pss_shared/public/set_pss_env_no_login
. /data/scm/public/setup_scm_sh



set -o pipefail

current_time=$(date "+%Y_%m_%d_%H_%M_%S")
SYSOUT=/tmp/${current_time}_${PROCESSING_MODEL}_run_slicgldPULL_out.txt


setup() {

  echo "\n##################################################################################"
  echo "\n#                  Starting SLIC to GOLD process                                "
  echo "\n#                     program model is $PROCESSING_MODEL                        "
  echo "\n##################################################################################"

  echo "Command being executed - "$0
  echo "Arguments being Passed - "$ARGS
  echo "Number of Arguments "$NUMARGS
  echo "PSS_DB  $PSS_DB"
  echo "PSS_ENV $PSS_ENV"
  echo "HOSTNAME "`hostname`

  scm_exe=$scm_home/c/exe;export scm_exe
  echo "scm_exe=$scm_exe"

  echo "SLICSRV=$SLICSRV"
  export SLICSRV
  echo "GOLDSRV=$GOLDSRV"
  export GOLDSRV
  echo "scm_home=$scm_home"
  echo "dta_scm=$dta_scm"
  echo "PSS_ENV=$PSS_ENV"

  if [ $PSS_ENV = "PRODN" ]
  then
    DATA_DIR=$dta_scm/PROD;export DATA_DIR
    IMACS=imacs_imcp	
  else
    DATA_DIR=$dta_scm/TEST;export DATA_DIR
    IMACS=imacs_imct
  fi

  echo "DATA_DIR $DATA_DIR"
  echo "IMACS=$IMACS"
  echo "####################################################################################"
  rc=0
}

goldPull() {
  GOLD_DATA_PULL=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_output.txt"

  HAHB_DATA=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_hahbchk_output.out"
  GOLD_PULL_ERRORS=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_email_errfile.out"

  echo $GOLD_DATA_PULL

  echo "\n##################################################################################"
  echo "#                  Executing Gold Pull                                            "
  echo "#                        slicgldPULL" 
  echo "##################################################################################"
  export TWO_TASK=$SLICSRV
  echo $TWO_TASK
  $scm_exe/slicgldPULL -n $PROCESSING_MODEL -o $GOLD_DATA_PULL -s $SLICSRV -g $GOLDSRV 
  rc=$?

  if [ $rc = 0 ]
  then
    echo "\n\t##################################################################################"
      echo "\t# slicgldPULL completed..."
    echo "\t##################################################################################"
  else
    echo "\n\t##################################################################################"
    echo "\t#      ERROR ERROR ERROR"
    echo "t##################################################################################"
          MSG_FILE=prov_err_msg
    echo "There has been a problem running slicgldPULL\n\nPlease contact $RECIPIENTS"
  fi
  chmod 770 $GOLD_DATA_PULL

  return $rc
}

slicHAhbCheck() {
  echo "\n##################################################################################"
  echo "#                  Executing SLIC HA/HB Check                                     "
  echo "#                         slicgldHAHBchk"
  echo "##################################################################################"
  GOLD_DATA_PULL=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_output.txt"
  HAHB_DATA=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_hahbchk_output.out"
  GOLD_PULL_ERRORS=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_email_errfile.out"
  $scm_exe/slicgldHAHBchk -i $GOLD_DATA_PULL -o $HAHB_DATA -e $GOLD_PULL_ERRORS -p $PROCESSING_MODEL
  rc=$?
  if [ $rc = 0 ]
  then
    echo "\n\t##################################################################################"
    echo "\t#  slicgldPULL step 2 $PROCESSING_MODEL completed...\n"
    echo "\t##################################################################################"
  else
    echo "\n\t##################################################################################"
    echo "\t                  ERROR ERROR ERROR"
    echo "\t##################################################################################"
          MSG_FILE=prov_err_msg
    echo "There has been a problem running slicgldPULL step 2 $PROCESSING_MODEL\n\nPlease contact app admin."
  fi
  chmod 770 $HAHB_DATA $GOLD_PULL_ERRORS
  return $rc
}

goldSlicExtract() {
  echo $TWO_TASK
  echo "\n#*******************************************************************#"
  echo "* Start of GOLD/SLIC Extract - " `date`
  echo "* Processing Environment - " $PSS_ENV
  echo "#*******************************************************************#"
  HAHB_DATA=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_hahbchk_output.out"
  API_CNSLDTD_SLICGLD_SRTD_ACTY_FILE=$HAHB_DATA;export API_CNSLDTD_SLICGLD_SRTD_ACTY_FILE
  API_UNSORTED_CAT1_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_unsorted_cat1_output.dta";export API_UNSORTED_CAT1_FILE
  API_UNSORTED_CATS_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_unsorted_cats_output.dta";export API_UNSORTED_CATS_FILE
  API_UNSORTED_WHSE_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_unsorted_whse_output.dta";export API_UNSORTED_WHSE_FILE
  API_UNSORTED_PRC1_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_unsorted_prc1_output.dta";export API_UNSORTED_PRC1_FILE
  API_UNSORTED_VENC_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_unsorted_venc_output.dta";export API_UNSORTED_VENC_FILE
  API_EXCEPTION_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_exception_file.dta";export API_EXCEPTION_FILE
  SHELF_LIFE_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_shelf_life_output.dta";export SHELF_LIFE_FILE

  echo "\n#*******************************************************************#"
  echo "#     Create GOLD/SLIC API Rcds                                       #"
  echo "# Input Candidate File "$API_CNSLDTD_SLICGLD_SRTD_ACTY_FILE
  echo "# Output Unsorted CAT1 File (Option B) "$API_UNSORTED_CAT1_FILE
  echo "# Output WHSE File (Option F) "$API_UNSORTED_WHSE_FILE
  echo "# Output VENC File (Option D) "$API_UNSORTED_VENC_FILE
  echo "# Output Exception File (Option H) "$API_EXCEPTION_FILE
  echo "# Output PRC1 File (Option J) "$API_UNSORTED_PRC1_FILE
  echo "# Output CATS File (Option K) "$API_UNSORTED_CATS_FILE
  echo "# Output Shelf Life File (Option L) "$SHELF_LIFE_FILE
  echo "# Processing Model (Option G) "$PROCESS_MODEL
  echo "# Create API File (Option Z) Y "
  echo "#*******************************************************************#"
  echo "#"
  #
  # Option A - Input File
  # Option B - Output CAT1 File
  # Option C - 
  # Option D - Output VENC File
  # Option E - Output Vendor Site File
  # Option F - Output WHSE File
  # Option J - Output PRC1 File
  # Option K - Output CATS File
  # Option L - Output Shelf Life File
  #
  
  $scm_exe/slicgldFMT -a$API_CNSLDTD_SLICGLD_SRTD_ACTY_FILE \
              -b$API_UNSORTED_CAT1_FILE \
               -cN \
              -d$API_UNSORTED_VENC_FILE \
              -f$API_UNSORTED_WHSE_FILE \
               -g$PROCESSING_MODEL \
              -h$API_EXCEPTION_FILE \
              -j$API_UNSORTED_PRC1_FILE \
              -k$API_UNSORTED_CATS_FILE \
              -l$SHELF_LIFE_FILE \
              -zY
  rc=$?
  echo "Return Code = " $rc
  if [ $rc -eq 0 ]
  then
    echo "\n\t*************************************************************"
    echo "\t* Successful completion of SLIC/Gold API Rcds Create - `date`"
    echo "\t*************************************************************"
    errcode=0
  else
    echo "\n\t##############################################################"
    echo "\t# Unsuccessful completion of SLIC/Gold API Rcds Create - `date`"
    echo "\t# Return Code "$rc
    echo "\t##############################################################"
    errcode=60
    echo "Errcode - "$errcode
  fi
  chmod 770 $API_UNSORTED_CAT1_FILE \
              $API_UNSORTED_VENC_FILE \
              $API_UNSORTED_WHSE_FILE \
              $API_EXCEPTION_FILE \
              $API_UNSORTED_PRC1_FILE \
              $API_UNSORTED_CATS_FILE \
              $SHELF_LIFE_FILE 
  
  return $rc
}

sortDupCat1Recs() {
  API_SORTED_CAT1_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_sorted_cat1.dta";export API_SORTED_CAT1_RCDS
  echo "\n#*******************************************************************#"
  echo "#             Sort Duplicate CAT1 Records"
  echo "# Output Unsorted CAT1 File "$API_UNSORTED_CAT1_FILE
  echo "# Sortout CAT1 File "$API_SORTED_CAT1_FILE
  echo "#*******************************************************************#"
  API_UNSORTED_CAT1_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_unsorted_cat1_output.dta";export API_UNSORTED_CAT1_FILE

  sort -u -o$API_SORTED_CAT1_FILE $API_UNSORTED_CAT1_FILE
  rc=$?

  echo "Return Code = " $rc
  if [ $rc -eq 0 ]
  then
    echo "\n\t*************************************************************"
    echo "\t* Successful completion of CAT1 File Sort - `date`"
    echo "\t*************************************************************"
    errcode=0
  else
    echo "\n\t##############################################################"
    echo "\t# Unsuccessful Completed of CAT1 File Sort - `date`"
    echo "\t# Return Code "$rc
    echo "\t##############################################################"
    errcode=65
    echo "Errcode - "$errcode
  fi
  chmod 770 $API_SORTED_CAT1_FILE

  return $rc
}

removeDupCat1Parts() {
  API_PURGED_CAT1_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_purged_cat1.dta";export API_PURGED_CAT1_RCDS
  API_REJECTD_CAT1_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_rejectd_cat1.dta";export API_REJECTD_CAT1_RCDS
  API_SORTED_CAT1_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_sorted_cat1.dta";export API_SORTED_CAT1_RCDS
  echo "\n#*******************************************************************#"
  echo "#             Remove Duplicate CAT1 Parts"
  echo "# Input CAT1 File "$API_SORTED_CAT1_FILE
  echo "# Purged CAT1 File "$API_PURGED_CAT1_FILE
  echo "# Rejected CAT1 File "$API_REJECTD_CAT1_FILE
  echo "#*******************************************************************#"

  $scm_exe/slicgldCAT1 -a$API_SORTED_CAT1_FILE -b$API_PURGED_CAT1_FILE -c$API_REJECTD_CAT1_FILE
  rc=$?

  echo "Return Code = " $rc
  if [ $rc -eq 0 ]
  then
    echo "\n\t*************************************************************"
    echo "\t* Successful completion of Removal of Duplicate CAT1 Parts - `date`"
    echo "\t*************************************************************"
    errcode=0
  else
    echo "\n\t##############################################################"
    echo "\t* Unsuccessful completion of Removal of Duplicate CAT1 Parts - `date`"
    echo "\t# Return Code "$rc
    echo "\t##############################################################"
    errcode=66
    echo "Errcode - "$errcode
  fi
  chmod 770 $API_PURGED_CAT1_FILE $API_REJECTED_CAT1_FILE

  return $rc
}

splitPrimesAlts() {
  export API_PURGED_CAT1_PRIMES_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_purged_cat1_primes.dta"
  export API_PURGED_CAT1_ALTERNATES_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_purged_cat1_alts.dta"
  export API_SORTED_CAT1_PRIMES_ALTERNATES_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_sorted_cat1_primes_alts.dta"
  API_PURGED_CAT1_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_purged_cat1.dta";export API_PURGED_CAT1_RCDS
  echo "\n#**********************************************************************************#"
  echo "#             Split Primes and Alternates"
  echo "# Input CAT1 File "$API_PURGED_CAT1_FILE
  echo "# Output CAT1 Primes "$API_PURGED_CAT1_PRIMES_FILE
  echo "# Output CAT1 Alts "$API_PURGED_CAT1_ALTERNATES_FILE
  echo "#**********************************************************************************#"

  $scm_exe/sortAltPrimes $API_PURGED_CAT1_FILE $API_PURGED_CAT1_PRIMES_FILE $API_PURGED_CAT1_ALTERNATES_FILE
  rc=$?

  echo "Return Code = "$rc
  if [ $rc -eq 0 ]
  then
    echo "\n\t*************************************************************"
    echo "\t* Successful completion of Split Prime and Alternate Split - `date`"
    echo "\t*************************************************************"
    echo " "
    export API_SORTED_CAT1_PRIMES_ALTERNATES_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_sorted_cat1_primes_alts.dta"
    echo "\n*************************************************************"
    echo "#           Consolidate Cat1 Prime and Alts                 #"
    echo "# Input CAT1 Alts "$API_PURGED_CAT1_ALTERNATES_FILE
    echo "# Input CAT1 Primes "$API_PURGED_CAT1_PRIMES_FILE
    echo "# Output CAT1 Primes and Alternates File "$API_SORTED_CAT1_PRIMES_ALTERNATES_FILE
    echo "*************************************************************"

    wc -l $API_PURGED_CAT1_ALTERNATES_FILE
    wc -l $API_PURGED_CAT1_PRIMES_FILE

    cat $API_PURGED_CAT1_ALTERNATES_FILE >> $API_PURGED_CAT1_PRIMES_FILE
    cat $API_PURGED_CAT1_PRIMES_FILE > $API_SORTED_CAT1_PRIMES_ALTERNATES_FILE

    wc -l $API_SORTED_CAT1_PRIMES_ALTERNATES_FILE

    errcode=0
  else
    echo "\n\t##############################################################"
    echo "\t* Unsuccessful completion of Prime and Alternate Sort - `date`"
    echo "\t# Return Code "$rc
    echo "\t##############################################################"
    errcode=68
    echo "Errcode - "$errcode
  fi
  chmod 770 $API_PURGED_CAT1_PRIMES_FILE $API_SORTED_CAT1_PRIMES_ALTERNATE_FILE
  return $rc
}

createACDTfile() {
  API_UNSORTED_ACTD_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_actd_unsorted_actd_output.dta";export API_UNSORTED_ACTD_FILE
  API_CAT1_ACTD_OUTFILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_actd_cat1_output.dta";export API_CAT1_ACTD_OUTFILE
  API_ACTD_EXCEPTION_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_actd_errors.dta";export API_ACTD_EXCEPTION_FILE
  API_ACTD_DELETION_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_actd_delete_file.dta";export API_ACTD_DELETION_FILE
  SHELF_LIFE_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_shelf_life_output.dta";export SHELF_LIFE_FILE
  export API_SORTED_CAT1_PRIMES_ALTERNATES_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_sorted_cat1_primes_alts.dta"
  
  echo "\n#*******************************************************************#"
  echo "#             Create ACTD File"
  echo "# Input CAT1 File  "$API_SORTED_CAT1_PRIMES_ALTERNATES_FILE
  echo "# Input Shelf Life File "$SHELF_LIFE_FILE
  echo "# Output ACTD API File "$API_UNSORTED_ACTD_FILE
  echo "# Output CAT1 File "$API_CAT1_ACTD_OUTFILE
  echo "# ACTD Errors File "$API_ACTD_EXCEPTION_FILE
  echo "# ACTD Delete File "$API_ACTD_DELETION_FILE
  echo "#*******************************************************************#"
  
  $scm_exe/slicgldACTD $SHELF_LIFE_FILE $API_UNSORTED_ACTD_FILE $API_ACTD_EXCEPTION_FILE $API_ACTD_DELETION_FILE $API_SORTED_CAT1_PRIMES_ALTERNATES_FILE $API_CAT1_ACTD_OUTFILE
  rc=$?
  
  if [ rc -eq 0 ]
    then
    echo "\n\t*************************************************************"
    echo "\t* Successful completion of Create ACTD File - `date`"
    echo "\t*************************************************************"
    errcode=0
  else
  
    echo "\n\t##############################################################"
    echo "\t# Unsuccessful Completion of Create ACTD File - `date`"
    echo "\t# Return Code "$rc
    echo "\t##############################################################"
    errcode=75
    echo "Errcode - "$errcode
  fi
  chmod 770 $API_UNSORTED_ACTD_FILE $API_ACTD_EXCEPTION_FILE $API_ACTD_DELETION_FILE $API_CAT1_ACTD_OUTFILE

  return $rc
}

sortACTDfile() {
  API_SORTED_ACTD_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_actd_sorted_output.dta";export API_SORTED_ACTD_FILE
  API_UNSORTED_ACTD_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_actd_unsorted_actd_output.dta";export API_UNSORTED_ACTD_FILE
  echo "\n#*******************************************************************#"
  echo "#                       Sort ACTD File                                #"
  echo "# Input Unsorted ACTD File "$API_UNSORTED_ACTD_FILE
  echo "# Ouput Sorted ACTD File "$API_SORTED_ACTD_FILE
  echo "#*******************************************************************#"
  echo "#"
  sort -u -o $API_SORTED_ACTD_FILE $API_UNSORTED_ACTD_FILE
  rc=$?
  echo "Return Code = " $rc
  
  if [ $rc -eq 0 ]
  then
      echo "\n\t*************************************************************"
      echo "\t* Successful completion of ACTD Sort - `date`"
    wc -l $API_SORTED_ACTD_FILE
      echo "\t*************************************************************"
      errcode=0
  else
  
      echo "\n\t##############################################################"
      echo "\t# Unsuccessful Completion of ACTD Sort - `date`"
      echo "\t# Return Code "$rc
      echo "\t##############################################################"
      errcode=70
      echo "Errcode - "$errcode
  fi
  chmod 770 $API_SORTED_ACTD_FILE 

  return $rc
}

sortCatalogRecs() {
  API_SORTED_ACTD_CAT1_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_actd_sorted_cat1_output.dta";export API_SORTED_ACTD_FILE
  API_CAT1_ACTD_OUTFILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_actd_cat1_output.dta";export API_CAT1_ACTD_OUTFILE
  API_SORTED_CAT1_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_sorted_cat1.dta";export API_SORTED_CAT1_RCDS
  export API_SORTED_CAT1_PRIMES_ALTERNATES_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_sorted_cat1_primes_alts.dta"
  echo "\n#*******************************************************************#"
  echo "#                       Sort Catalog Records                          #"
  echo "# Input CAT1 File "$API_SORTED_CAT1_PRIMES_ALTERNATES_FILE
  echo "# Input Sorted ACTD File "$API_SORTED_ACTD_FILE
  echo "# Ouput Sorted CAT1 File "$API_SORTED_CAT1_FILE
  echo "#*******************************************************************#"
  echo "#"

  sort -u -o $API_SORTED_ACTD_CAT1_FILE $API_SORTED_CAT1_PRIMES_ALTERNATES_FILE $API_CAT1_ACTD_OUTFILE
  rc=$?

  echo "Return Code = " $rc
  
  if [ $rc -eq 0 ]
  then
      wc -l $API_SORTED_CAT1_FILE
      echo "\n\t*************************************************************"
      echo "\t* Successful completion of Catalog Sort - `date`"
      echo "\t*************************************************************"
      errcode=0
  else
  
      echo "\n\t##############################################################"
      echo "\t# Unsuccessful Completion of Catalog Sort - `date`"
      echo "\t# Return Code "$rc
      echo "\t##############################################################"
      errcode=71
      echo "Errcode - "$errcode
  fi
  chmod 770 $API_SORTED_ACTD_CAT1_FILE

  return $rc
}

sortVennData() {
  API_SORTED_VENC_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_sorted_venc_output.dta";export API_SORTED_VENC_FILE
  API_UNSORTED_VENC_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_unsorted_venc_output.dta";export API_UNSORTED_VENC_FILE
  echo "\n#*******************************************************************#"
  echo "#                 Sort VENC File or Vendor Code                       #"
  echo "# Input Unsorted VENC File "$API_UNSORTED_VENC_FILE
  echo "# Ouput Sorted VENC File "$API_SORTED_VENC_FILE
  echo "#*******************************************************************#"
  echo "#"

  sort -u -o $API_SORTED_VENC_FILE $API_UNSORTED_VENC_FILE
  rc=$?

  echo "Return Code = " $rc
  if [ $rc -eq 0 ]
  then
    echo "\n\t*************************************************************"
    echo "\t* Successful completion of Sort - `date`"
    echo "\t*************************************************************"
    errcode=0
  else
    echo "\n\t##############################################################"
    echo "\t# Unsuccessful Completion of Sort - `date`"
    echo "\t# Return Code "$rc
    echo "\t##############################################################"
    errcode=70
    echo "Errcode - "$errcode
  fi
  chmod 770 $API_SORTED_VENC_FILE
  return $rc
}

createVennFile() {
  export TWO_TASK=$SLICSRV
  echo $TWO_TASK
  API_VENN_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_unsorted_venn_output.dta";export API_VENN_FILE
  API_SORTED_VENC_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_sorted_venc_output.dta";export API_SORTED_VENC_FILE
  echo "\n\t#*******************************************************************#"
  echo "\t#                             Create VENN File                        #"
  echo "\t#                                 slicgldVENN                         #"
  echo "\t# Input VENN File "$API_SORTED_VENC_FILE
  echo "\t# Output VENN File "$API_VENN_FILE
  echo "\t# Create Delimited File - N"
  echo "\t#*******************************************************************#"
  echo "\t#"

  $scm_exe/slicgldVENN -a$API_SORTED_VENC_FILE -b$API_VENN_FILE -cN -d$PROCESSING_MODEL
  rc=$?

  echo "Return Code = " $rc
  if [ $rc -eq 0 ]
  then
    echo "\n\t*************************************************************"
    echo "\t* Successful completion of Create VENN File - `date`"
    echo "\t*************************************************************"
    errcode=0
  else
    echo "\n\t##############################################################"
    echo "\t# Unsuccessful Completed of Create VENN File - `date`"
    echo "\t# Return Code "$rc
    echo "\t##############################################################"
    errcode=75
    echo "Errcode - "$errcode
  fi
  chmod 770 $API_VENN_FILE 

  return $rc
}

validateVendorCode() {
  API_GOLD_VALID_VENN_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_gold_valid_venn.dta";export API_GOLD_VALID_VENN_FILE
  API_GOLD_VENN_ERROR_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_vendor_errors.dta";export API_GOLD_VENN_ERROR_FILE
  API_VENN_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_unsorted_venn_output.dta";export API_VENN_FILE
  echo "\n#*******************************************************************#"
  echo "#             Validate Vendor Code File against Gold                  #"
  echo "#                     slicgldVNDRcheck                                #"
  echo "# Input VENN File "$API_VENN_FILE
  echo "# Output Valid VENN Acty File "$API_GOLD_VALID_VENN_FILE
  echo "# Output VENN Error File "$API_GOLD_VENN_ERROR_FILE
  echo "#*******************************************************************#"
  export TWO_TASK=$GOLDSRV
  echo "Processing at "$TWO_TASK

  $scm_exe/slicgldVNDRcheck -a$API_VENN_FILE -b$API_GOLD_VALID_VENN_FILE -c$API_GOLD_VENN_ERROR_FILE
  rc=$?

  echo "Return Code = " $rc
  if [ $rc -eq 0 ]
  then
    export TWO_TASK=$SLICSRV
    echo "\n\t*************************************************************"
    echo "\t* Successful completion of Validate Vendor Activity File against Gold - `date`"
    echo "\t*Processing at "$TWO_TASK
    echo "\t*************************************************************"
    errcode=0
  else
    echo "\n\t##############################################################"
    echo "\t# Unsuccessful Completed of Valide Vendor Activity File against Gold - `date`"
    echo "\t# Return Code "$rc
    echo "\t##############################################################"
    errcode=89
    echo "\tErrcode - "$errcode
  fi
  chmod 770 $API_GOLD_VALID_VENN_FILE $API_GOLD_VENN_ERROR_FILE

  return $rc
}


sortConsolidatedApiFile() {
  API_MERGED_SLICGLD_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_merged_acty.dta";export API_MERGED_SLICGLD_FILE
  API_GOLD_VALID_VENN_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_gold_valid_venn.dta";export API_GOLD_VALID_VENN_FILE
  API_SORTED_CAT1_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_sorted_cat1.dta";export API_SORTED_CAT1_RCDS
  echo "\n#*******************************************************************#"
  echo "#             Sort Creation of Consolidated API File "
  echo "# Input CAT1 File "$API_SORTED_CAT1_FILE
  echo "# Input VENN File "$API_GOLD_VALID_VENN_FILE
  echo "# Output Merged API Activity File "$API_MERGED_SLICGLD_FILE
  echo "#*******************************************************************#"

  wc -l $API_SORTED_CAT1_FILE
  wc -l $API_GOLD_VALID_VENN_FILE

  sort -u -o$API_MERGED_SLICGLD_FILE $API_SORTED_CAT1_FILE $API_GOLD_VALID_VENN_FILE
  rc=$?
  echo "Return Code = " $rc
  if [ $rc -eq 0 ]
  then
    echo "\n\t*************************************************************"
    echo "\t* Successful Creation of Consolidated API FIle - `date`"
    wc -l $API_MERGED_SLICGLD_FILE
    echo "\t*************************************************************"
    errcode=0
  else
    echo "\n\t##############################################################"
    echo "\t# Unsuccessful Creation of Consolidated API File - `date`"
    echo "\t# Return Code "$rc
    echo "\t##############################################################"
    errcode=90
  fi
  chmod 770 $API_MERGED_SLICGLD_FILE 

  return $rc
}

reorderMergedApiFile() {
  API_ACTY_FILE_WITH_SORTWORD=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_acty_file_with_sortword.dta";export API_ACTY_FILE_WITH_SORTWORD
  API_MERGED_SLICGLD_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_merged_acty.dta";export API_MERGED_SLICGLD_FILE
  echo "\n#*******************************************************************#"
  echo "#             Reorder Merged API File "
  echo "# Input Merged API Activity FIle "$API_MERGED_SLICGLD_FILE
  echo "# Output API Activity File w/Sortword "$API_ACTY_FILE_WITH_SORTWORD
  echo "#*******************************************************************#"
  export TWO_TASK=$SLICSRV
  echo "Processing at "$TWO_TASK

  $scm_exe/slicgldPRIME -a$API_MERGED_SLICGLD_FILE -b$API_ACTY_FILE_WITH_SORTWORD -c/dev/null
  rc=$?

  echo "Return Code = " $rc
  if [ $rc -eq 0 ]
  then
    echo "\n\t*************************************************************"
    echo "\t* Successful Reorg Merged API File - `date`"
    echo "\t*************************************************************"
    errcode=0
  else
    echo "\n\t##############################################################"
    echo "\t# Unsuccessful Reorg Merged API File - `date`"
    echo "\t# Return Code "$rc
    echo "\t##############################################################"
    errcode=90
  fi
  chmod 770 $API_ACTY_FILE_WITH_SORTWORD

  return $rc
}

sortApiFile() {
  API_ACTY_FILE_WITH_SORTWORD_SORTED=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_acty_file_with_sortword_sorted.dta";export API_ACTY_FILE_WITH_SORTWORD_SORTED
  API_ACTY_FILE_WITH_SORTWORD=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_acty_file_with_sortword.dta";export API_ACTY_FILE_WITH_SORTWORD
  echo "\n#*******************************************************************#"
  echo "#             Sort API File "
  echo "# Input API Activity File w/Sortword "$API_ACTY_FILE_WITH_SORTWORD
  echo "# Output Sorted API Activity File w/Sortword "$API_ACTY_FILE_WITH_SORTWORD_SORTED
  echo "#*******************************************************************#"

  sort -u -o$API_ACTY_FILE_WITH_SORTWORD_SORTED $API_ACTY_FILE_WITH_SORTWORD
  rc=$?

  echo "Return Code = " $rc
  if [ $rc -eq 0 ]
  then
    echo "\n\t*************************************************************"
    echo "\t* Successful Sort of API File - `date`"
    wc -l $API_ACTY_FILE_WITH_SORTWORD_SORTED
    echo "\t*************************************************************"
    errcode=0
  else
    echo "\n##############################################################"
    echo "# Unsuccessful Sort of API File - `date`"
    echo "# Return Code "$rc
    echo "##############################################################"
    errcode=90
  fi
  chmod 770 $API_ACTY_FILE_WITH_SORTWORD_SORTED

  return $rc
}

createApiFile() {
  API_ACTY_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_acty_file.dta";export API_ACTY_FILE
  API_ACTY_FILE_WITH_SORTWORD_SORTED=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_acty_file_with_sortword_sorted.dta";export API_ACTY_FILE_WITH_SORTWORD_SORTED
  echo "\n#*******************************************************************#"
  echo "#             Create API File - Remove Sortwork"
  echo "# Input Sorted API Activity File w/Sortword "$API_ACTY_FILE_WITH_SORTWORD_SORTED
  echo "# Output API Activity File"$API_ACTY_FILE
  echo "#*******************************************************************#"
  cut -b3- $API_ACTY_FILE_WITH_SORTWORD_SORTED>$API_ACTY_FILE
  rc=$?
  echo "Return Code = " $rc
  if [ $rc -eq 0 ]
  then
    echo "\n\t*************************************************************"
    echo "\t* Successful Sort of API File - `date`"
    echo "\t*************************************************************"
    errcode=0
  else
    echo "\n\t##############################################################"
    echo "\t# Unsuccessful Sort of API File - `date`"
    echo "\t# Return Code "$rc
    echo "\t##############################################################"
    errcode=90
  fi
  chmod 770 $API_ACTY_FILE

  return $rc
}

prepCompleted() {
  API_ACTY_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_acty_file.dta";export API_ACTY_FILE

  if [ $rc -eq 0 ]
  then
    echo "\n*************************************************************"
    echo "* Successful Completion of GOLD/SLIC Interface - `date`"
    echo "*************************************************************"
    echo "Completion of GOLD/SLIC Data pull - `date`"

    rcd_count=`wc -l $API_ACTY_FILE|awk '{print $1}'`
    rc=$?

    if [ $rc -eq 0 ]
    then
      if [ $rcd_count > 0 ]
      then
        echo "\n\tNumber of Records in "$API_ACTY_FILE " is "$rcd_count
        echo "\tCompletion of GOLD/SLIC Data pull"
      else
        echo "\n\t*************************************************************"
        echo "\n\tNo Records to process in "$API_ACTY_FILE
        echo "\n\t*************************************************************"
        rc=100
      fi
    else
      echo "\n\t#############################################################"
      echo "\n\tProblem getting record count on file " $API_ACTY_FILE
      echo "\n\t#############################################################"
      errcode=101
      rc=101
    fi
  else
    echo "\n\t*************************************************************"
    echo "\t* UnSuccessful Completion of GOLD/SLIC Interface - `date`"
    echo "\t*************************************************************"
    echo "\tReturn Code is " $rc
  fi

  return $rc
}

updateGoldApiSharedTable() {
  API_ACTY_FILE=$DATA_DIR/$PROCESSING_MODEL"_slicgldPULL_acty_file.dta";export API_ACTY_FILE
  echo "\n#*******************************************************************#"
  echo "* Start of Gold API Shared Table Update - " `date`
  echo "* Processing Environment - " $PSS_ENV
  echo "#*******************************************************************#"
  export TWO_TASK=$GOLDSRV
  echo $TWO_TASK

  $scm_exe/gldCATAPIU  $APIDBG -a$API_ACTY_FILE -b$DATA_DIR/${PROCESSING_MODEL}_slicgldPULL_gldCATAPIU_error_file_cw.dta
  rc=$?

  echo "Return Code = " $rc
  if [ $rc -eq 0 ]
  then
    export TWO_TASK=$SLICSRV
    echo "\n\t*************************************************************"
    echo "\t* Successful completion of Gold API Shared Table Update - `date`"
    echo "\t*Processing at "$TWO_TASK
    echo "\t*************************************************************"
    errcode=0
  else
    echo "\n\t##############################################################"
    echo "\t# Unsuccessful Completion of the Gold API Shared Table Update - `date`"
    echo "\t# Return Code "$rc
    echo "\t##############################################################"
    errcode=200
    echo "Errcode - "$errcode
  fi
  chmod 770 $DATA_DIR/${PROCESSING_MODEL}_slicgldPULL_gldCATAPIU_error_file_cw.dta

  return $rc
}

menu() {
  echo "0. goldPull"
  echo "1. slicHAhbCheck"
  echo "2. goldSlicExtract"
  echo "3. sortDupCat1Recs"
  echo "4. removeDupCat1Parts"
  echo "5. splitPrimesAlts"
  echo "6. createACDTfile"
  echo "7. sortACTDfile"
  echo "8. sortVennData"
  echo "9. createVennFile"
  echo "10. validateVendorCode"
  echo "11. sortConsolidatedApiFile"
  echo "12. reorderMergedApiFile"
  echo "13. sortApiFile"
  echo "14. createApiFile"
  echo "15. prepCompleted"
  echo "16. updateGoldApiSharedTable"
}

main() {
  if [ $stepnum -eq 0 ] ; then
    goldPull
    rc=$?
    let stepnum=$stepnum+1
  fi

  if [ $rc -eq 0 -a $stepnum -eq 1 ]
  then
    slicHAhbCheck
    rc=$?
    let stepnum=$stepnum+1
  fi

  if [ $rc -eq 0 -a $stepnum -eq 2 ]
  then
    goldSlicExtract
    rc=$?
    let stepnum=$stepnum+1
  fi

  if [ $rc -eq 0 -a $stepnum -eq 3 ]
  then
    sortDupCat1Recs
    rc=$?
    let stepnum=$stepnum+1
  fi

  if [ $rc -eq 0 -a $stepnum -eq 4 ]
  then
    removeDupCat1Parts
    rc=$?
    let stepnum=$stepnum+1
  fi

  if [ $rc -eq 0 -a $stepnum -eq 5 ]
  then
    splitPrimesAlts
    rc=$?
    let stepnum=$stepnum+1
  fi

  if [ $rc -eq 0 -a $stepnum -eq 6 ]
  then
    createACDTfile
    rc=$?
    let stepnum=$stepnum+1
  fi

  if [ $rc -eq 0 -a $stepnum -eq 7 ]
  then
    sortACTDfile
    rc=$?
    let stepnum=$stepnum+1
  fi

  if [ $rc -eq 0 -a $stepnum -eq 8 ]
  then
    sortVennData
    rc=$?
    let stepnum=$stepnum+1
  fi

  if [ $rc -eq 0 -a $stepnum -eq 9 ]
  then
    createVennFile
    rc=$?
    let stepnum=$stepnum+1
  fi

  if [ $rc -eq 0 -a $stepnum -eq 10 ]
  then
    validateVendorCode
    rc=$?
    let stepnum=$stepnum+1
  fi

  if [ $rc -eq 0 -a $stepnum -eq 11 ]
  then
    sortConsolidatedApiFile
    rc=$?
    let stepnum=$stepnum+1
  fi

  if [ $rc -eq 0 -a $stepnum -eq 12 ]
  then
    reorderMergedApiFile
    rc=$?
    let stepnum=$stepnum+1
  fi

  if [ $rc -eq 0 -a $stepnum -eq 13 ]
  then
    sortApiFile
    rc=$?
    let stepnum=$stepnum+1
  fi

  if [ $rc -eq 0 -a $stepnum -eq 14 ]
  then
    createApiFile
    rc=$?
    let stepnum=$stepnum+1
  fi

  if [ $rc -eq 0 -a $stepnum -eq 15 ]
  then
    prepCompleted
    rc=$?
    let stepnum=$stepnum+1
  fi

  if [ $rc -eq 0 -a $stepnum -eq 16 ]
  then
    updateGoldApiSharedTable
    rc=$?
    let stepnum=$stepnum+1
  fi

  if [ $rc -eq 0 ]
    then
    echo "---------------------------------------------------------------------------"
    echo "--- ACDC Load Repair Tabless Completion `date`                        -----"
    echo "--- Return Code " $rc
    echo "---------------------------------------------------------------------------"
  fi

  echo "\n##############################################################"
  echo "# Completion of GOLD/SLIC API Processing - `date`"
  echo "#\n Error Code Returned from process - $errcode"
  echo "# Return Code Returned - $rc"
  echo "##############################################################"

  return $rc
}

{
setup
  if [ "$STEP" = "menu" ] ; then
    menu
  elif [ -n "$STEP" ] ; then
    $STEP ; [[ $? == 0 ]] || (echo "Step $STEP does not exist in this script" && usage)
  else  
    main
  fi 
} 2>&1 | tee -a $SYSOUT
rc=$?

if [ "$STEP" = "menu" ] ; then
  exit 0
fi


MDL=$PROCESSING_MODEL" GOLD SLIC Interface"
if [ $rc -eq 0 ]
  then
  echo -e "From: run_slicgldPULL.sh Script\nSubject: Successful Completion of SLIC to GOLD for $MDL\nTo: ${RECIPIENTS}" | more $SYSOUT | sed '/^~/s/~//' | sendmail -t

else
  echo -e "From: run_slicgldPULL.sh Script\nSubject: Unsuccessful Completion of SLIC to GOLD for $MDL\nTo: ${RECIPIENTS}" | more $SYSOUT | sed '/^~/s/~//' | sendmail -t
fi

chmod 660 $SYSOUT

exit $errcode 

